require 'fileutils'

# Variables
# -----------------------------
AS65='xa'
CC='cc'


# Functions
# -----------------------------
# Remove file extension
def get_name(x)
	x.scan(/([a-z_0-9]+)\.(.*)/)[0][0]
end

# Remove file extension
def get_ext(x)
	x.scan(/([a-z_0-9]+)\.(.*)/)[0][1]
end

# Rule for .a65 to .nes
# like GNUMakefile .a65.nes: target
def a65_nes(x)

	# Get base filename
	y=get_name(x)

	# Run command if needed
	if !FileUtils.uptodate?('#{y}.nes',['#{y}.a65'])
		`set -x; #{AS65} #{y}.a65 -o #{y}.nes`
	else
		puts"nothing to be done for #{x}"
	end
end

# Rule for .c to .o
def c_o(x)

	# Get base filename
	y=get_name(x)

	# Run command if needed
	if !FileUtils.uptodate?('#{y}.o',['#{y}.c'])
		`set -x; #{CC} -c #{y}.c`
	else
		puts"nothing to be done for #{x}"
	end
end

# Generic make method to determine filetypes
def make(x)
	case get_ext(x)
		when 'o'
			c_o(x)
		when 'nes'
			a65_nes(x)
		else
			puts"No rule to make target \"#{x}\""
	end
end

# Remove files
def clean(x)
	`set -x; rm -f #{x}`
end


# Rules
# -----------------------------
task :default do
	make'nes.nes'
end

task :clean do
	clean'nes.nes'
end
